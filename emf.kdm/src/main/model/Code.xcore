@Ecore(nsURI="http://schema.omg.org/spec/KDM/1.2/code")
@GenModel(copyrightText="\r\nCopyright (c) 2009 Hatha Systems.\r\nAll rights reserved. This program and the accompanying materials\r\nare made available under the terms of the Eclipse Public License v1.0\r\nwhich accompanies this distribution, and is available at\r\nhttp://www.eclipse.org/legal/epl-v10.html\r\n\r\nContributors:\r\n    Nikolai Mansourov (Hatha Systems) - initial API and implementation\r\n    Gabriel Barbier (Mia-Software) - minor evolutions for version 1.1",
	modelDirectory="/emf.kdm/src/main/java-gen",
	modelName="Kdm", nonNLSMarkers="true", importerID="org.eclipse.emf.importer.ecore")
package org.eclipse.gmt.modisco.omg.kdm.code

import org.eclipse.gmt.modisco.omg.kdm.action.EntryFlow
import org.eclipse.gmt.modisco.omg.kdm.core.KDMEntity
import org.eclipse.gmt.modisco.omg.kdm.core.KDMRelationship
import org.eclipse.gmt.modisco.omg.kdm.core.ModelElement
import org.eclipse.gmt.modisco.omg.kdm.kdm.KDMModel
import org.eclipse.gmt.modisco.omg.kdm.source.SourceRef

interface AbstractCodeElement extends KDMEntity {
	contains unordered SourceRef[] source
	contains unordered CommentUnit[] comment
	contains unordered EntryFlow[] entryFlow
	contains unordered AbstractCodeRelationship[] codeRelation
}

interface CodeItem extends AbstractCodeElement {
}

class ComputationalObject extends CodeItem {
}

class ControlElement extends ComputationalObject {
	refers unordered Datatype ^type
	contains AbstractCodeElement[] codeElement
}

class MethodUnit extends ControlElement {
	MethodKind kind
	ExportKind export
}

class Module extends CodeItem {
	contains AbstractCodeElement[] codeElement
}

class CodeAssembly extends Module {
}

class CallableUnit extends ControlElement {
	CallableKind kind
}

class Datatype extends CodeItem {
}

class TemplateUnit extends Datatype {
	contains CodeItem[] codeElement
}

class TemplateParameter extends Datatype {
}

interface AbstractCodeRelationship extends KDMRelationship {
}

class InstanceOf extends AbstractCodeRelationship {
	refers unordered TemplateUnit[1] to
	refers unordered AbstractCodeElement[1] from
}

class CompilationUnit extends Module {
}

class CodeModel extends KDMModel {
	contains unordered AbstractCodeElement[] codeElement
}

class DerivedType extends Datatype {
	contains unordered ItemUnit[1] itemUnit
}

class ArrayType extends DerivedType {
	org.eclipse.gmt.modisco.omg.kdm.core.Integer size
	contains unordered IndexUnit[1] indexUnit
}

class PrimitiveType extends Datatype {
}

class BooleanType extends PrimitiveType {
}

class CharType extends PrimitiveType {
}

class ClassUnit extends Datatype {
	org.eclipse.gmt.modisco.omg.kdm.core.Boolean isAbstract
	contains CodeItem[] codeElement
}

class CompositeType extends Datatype {
	contains ItemUnit[] itemUnit
}

class RecordType extends CompositeType {
}

class EnumeratedType extends Datatype {
	contains Value[] value
}

class Extends extends AbstractCodeRelationship {
	refers unordered Datatype[1] to
	refers unordered Datatype[1] from
}

class ScaledType extends PrimitiveType {
}

class FloatType extends PrimitiveType {
}

class HasType extends AbstractCodeRelationship {
	refers unordered Datatype[1] to
	refers unordered CodeItem[1] from
}

class ImplementationOf extends AbstractCodeRelationship {
	refers unordered CodeItem[1] to
	refers unordered CodeItem[1] from
}

class Implements extends AbstractCodeRelationship {
	refers unordered CodeItem[1] to
	refers unordered CodeItem[1] from
}

class IntegerType extends PrimitiveType {
}

class InterfaceUnit extends Datatype {
	contains CodeItem[] codeElement
}

class PointerType extends DerivedType {
}

interface DefinedType extends Datatype {
	refers unordered Datatype[1] ^type
	contains unordered Datatype codeElement
}

class TypeUnit extends DefinedType {
}

class RangeType extends DerivedType {
	org.eclipse.gmt.modisco.omg.KDM.core.Integer lower
	org.eclipse.gmt.modisco.omg.KDM.core.Integer upper
}

class Signature extends Datatype {
	contains ParameterUnit[] parameterUnit
}

class DataElement extends ComputationalObject {
	refers unordered Datatype[1] ^type
	org.eclipse.gmt.modisco.omg.KDM.core.String ext
	org.eclipse.gmt.modisco.omg.KDM.core.Integer size
	contains unordered Datatype[] codeElement
}

class StringType extends PrimitiveType {
}

class ChoiceType extends CompositeType {
}

class NamespaceUnit extends CodeItem {
	refers unordered CodeItem[] groupedCode
}

class VisibleIn extends AbstractCodeRelationship {
	refers unordered CodeItem[1] to
	refers unordered CodeItem[1] from
}

class CommentUnit extends org.eclipse.gmt.modisco.omg.KDM.core.ModelElement {
	org.eclipse.gmt.modisco.omg.KDM.core.String text
}

class SharedUnit extends CompilationUnit {
}

class DecimalType extends PrimitiveType {
}

class DateType extends PrimitiveType {
}

class TimeType extends PrimitiveType {
}

enum MethodKind {
	method
	constructor = 1
	destructor = 2
	operator = 3
	virtual = 4
	^abstract = 5
	unknown = 6
}

class VoidType extends PrimitiveType {
}

class ValueElement extends DataElement {
}

class Value extends ValueElement {
}

class ValueList extends ValueElement {
	contains ValueElement[] valueElement
}

class StorableUnit extends DataElement {
	StorableKind kind
}

class MemberUnit extends DataElement {
	ExportKind export
}

class ParameterUnit extends DataElement {
	ParameterKind kind
	org.eclipse.gmt.modisco.omg.KDM.core.Integer pos
}

class ItemUnit extends DataElement {
}

class IndexUnit extends DataElement {
}

class SynonymType extends DefinedType {
}

class SequenceType extends DerivedType {
	org.eclipse.gmt.modisco.omg.KDM.core.Integer size
}

class BagType extends DerivedType {
	org.eclipse.gmt.modisco.omg.KDM.core.Integer size
}

class SetType extends DerivedType {
	org.eclipse.gmt.modisco.omg.KDM.core.Integer size
}

class CodeElement extends CodeItem {
}

class CodeRelationship extends AbstractCodeRelationship {
	refers unordered org.eclipse.gmt.modisco.omg.KDM.core.KDMEntity[1] to
	refers unordered CodeItem[1] from
}

enum ParameterKind {
	byValue
	byName = 1
	byReference = 2
	variadic = 3
	^return = 4
	^throws = 5
	exception = 6
	catchall = 7
	unknown = 8
}

enum ExportKind {
	public
	private = 1
	protected = 2
	final = 3
	unknown = 4
}

class LanguageUnit extends Module {
}

class OrdinalType extends PrimitiveType {
}

class BitstringType extends PrimitiveType {
}

class OctetType extends PrimitiveType {
}

class OctetstringType extends PrimitiveType {
}

class BitType extends PrimitiveType {
}

enum StorableKind {
	global
	^local = 1
	^static = 2
	external = 3
	register = 4
	unknown = 5
}

enum CallableKind {
	external
	regular = 1
	operator = 2
	stored = 3
	unknown = 4
}

class Imports extends AbstractCodeRelationship {
	refers unordered CodeItem[1] to
	refers unordered CodeItem[1] from
}

class Package extends Module {
}

class ParameterTo extends AbstractCodeRelationship {
	refers unordered CodeItem[1] to
	refers unordered AbstractCodeElement[1] from
}

class TemplateType extends Datatype {
}

class PreprocessorDirective extends AbstractCodeElement {
	contains unordered AbstractCodeElement[] codeElement
}

class MacroDirective extends PreprocessorDirective {
}

class MacroUnit extends PreprocessorDirective {
	MacroKind kind
}

class ConditionalDirective extends PreprocessorDirective {
}

class IncludeDirective extends PreprocessorDirective {
}

enum MacroKind {
	regular
	option = 1
	undefined = 2
	external = 3
	unknown = 4
}

class VariantTo extends AbstractCodeRelationship {
	refers unordered PreprocessorDirective[1] to
	refers unordered PreprocessorDirective[1] from
}

class Expands extends AbstractCodeRelationship {
	refers unordered PreprocessorDirective[1] to
	refers unordered PreprocessorDirective[1] from
}

class Redefines extends AbstractCodeRelationship {
	refers unordered PreprocessorDirective[1] to
	refers unordered PreprocessorDirective[1] from
}

class GeneratedFrom extends AbstractCodeRelationship {
	refers unordered PreprocessorDirective[1] to
	refers unordered AbstractCodeElement[1] from
}

class Includes extends AbstractCodeRelationship {
	refers unordered AbstractCodeElement[1] to
	refers unordered PreprocessorDirective[1] from
}

class HasValue extends AbstractCodeRelationship {
	refers unordered AbstractCodeElement[1] to
	refers unordered CodeItem[1] from
}